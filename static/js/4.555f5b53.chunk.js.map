{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js","components/PasswordGenerator.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","getRangeAt","tagName","toUpperCase","blur","type","focus","PasswordGenerator","styled","className","useState","uppercase","lowercase","numbers","setValue","password","setPassword","inputHandle","items","v","checked","name","randomFunc","String","fromCharCode","Math","floor","random","id","onClick","copy","min","max","onChange","generatedPassword","typesCount","typesArr","check","add","slice"],"mappings":"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","file":"static/js/4.555f5b53.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"âŒ˜\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst Container = ({ className }) => {\r\n    const [value, setValue] = useState({\r\n        length: 20,\r\n        uppercase: true,\r\n        lowercase: true,\r\n        numbers: true,\r\n        symbols: true\r\n    });\r\n    const [password, setPassword] = useState(\"\");\r\n    const inputHandle = (e) => {\r\n        let items = { ...value };\r\n        let v = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n        items[e.target.name] = v;\r\n        setValue(items);\r\n    }\r\n\r\n    const getRandomLower = () => {\r\n        return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\r\n    }\r\n\r\n    const getRandomUpper = () => {\r\n        return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n    }\r\n\r\n    const getRandomNumber = () => {\r\n        return String.fromCharCode(Math.floor(Math.random() * 10) + 48);\r\n    }\r\n\r\n    const getRandomSymbol = () => {\r\n        const symbols = '!@#$%^&*(){}[]=<>/,.';\r\n        return symbols[Math.floor(Math.random() * symbols.length)];\r\n    }\r\n\r\n    const randomFunc = {\r\n        lowercase: getRandomLower,\r\n        uppercase: getRandomUpper,\r\n        numbers: getRandomNumber,\r\n        symbols: getRandomSymbol\r\n    }\r\n\r\n    const generator = () => {\r\n        let generatedPassword = \"\";\r\n        const typesCount = value.lowercase + value.uppercase + value.numbers + value.symbols;\r\n        const typesArr = [\r\n            { type: \"lowercase\", check: value.lowercase },\r\n            { type: \"uppercase\", check: value.uppercase },\r\n            { type: \"numbers\", check: value.numbers },\r\n            { type: \"symbols\", check: value.symbols }\r\n        ];\r\n\r\n        if (typesCount === 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < value.length; i += typesCount) {\r\n            let add = \"\";\r\n            typesArr.forEach(({ type, check }) => {\r\n                add = add + (check ? randomFunc[type]() : \"\");\r\n            });\r\n            generatedPassword = generatedPassword + add;\r\n            add = \"\";\r\n        }\r\n\r\n        setPassword(generatedPassword.slice(0, value.length));\r\n    }\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"container\">\r\n                <h2>Password Generator</h2>\r\n                <div className=\"result-container\">\r\n                    <span id=\"result\">{password}</span>\r\n                    <button className=\"btn\" onClick={() => {\r\n                        copy(password);\r\n                    }}>\r\n                        <i className=\"far fa-clipboard\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"settings\">\r\n                    <div className=\"setting\">\r\n                        <label>Password Length</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"length\"\r\n                            min=\"4\"\r\n                            max=\"20\"\r\n                            value={value.length}\r\n                            onChange={inputHandle} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <label>Include uppercase letters</label>\r\n                        <input type=\"checkbox\" name=\"uppercase\" checked={value.uppercase} onChange={inputHandle} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <label>Include lowercase letters</label>\r\n                        <input type=\"checkbox\" name=\"lowercase\" checked={value.lowercase} onChange={inputHandle} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <label>Include numbers</label>\r\n                        <input type=\"checkbox\" name=\"numbers\" checked={value.numbers} onChange={inputHandle} />\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <label>Include symbols</label>\r\n                        <input type=\"checkbox\" name=\"symbols\" checked={value.symbols} onChange={inputHandle} />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-large\" onClick={generator}>\r\n                    Generate Password\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PasswordGenerator = styled(Container)`\r\n    & {\r\n        background-color: #3b3b98;\r\n        color: #fff;\r\n        font-family: 'Muli', sans-serif;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: calc(100vh - 80px);\r\n        position: relative;\r\n        top: 80px;\r\n        overflow: hidden;\r\n        padding: 10px;\r\n        margin: 0;\r\n    }\r\n    \r\n    h2 {\r\n        margin: 10px 0 20px;\r\n        text-align: center;\r\n    }\r\n    \r\n    .container {\r\n        background-color: #23235b;\r\n        box-shadow: 0px 2px 10px rgba(255, 255, 255, 0.2);\r\n        padding: 20px;\r\n        width: 350px;\r\n        max-width: 100%;\r\n    }\r\n    \r\n    .result-container {\r\n        background-color: rgba(0, 0, 0, 0.4);\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        position: relative;\r\n        font-size: 18px;\r\n        letter-spacing: 1px;\r\n        padding: 12px 10px;\r\n        height: 50px;\r\n        width: 100%;\r\n    }\r\n    \r\n    .result-container #result {\r\n        word-wrap: break-word;\r\n        max-width: calc(100% - 40px);\r\n    }\r\n    \r\n    .result-container .btn {\r\n        position: absolute;\r\n        top: 5px;\r\n        right: 5px;\r\n        width: 40px;\r\n        height: 40px;\r\n        font-size: 20px;\r\n    }\r\n    \r\n    .btn {\r\n        border: none;\r\n        background-color: #3b3b98;\r\n        color: #fff;\r\n        font-size: 16px;\r\n        padding: 8px 12px;\r\n        cursor: pointer;\r\n    }\r\n    \r\n    .btn-large {\r\n        display: block;\r\n        width: 100%;\r\n    }\r\n    \r\n    .setting {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin: 15px 0;\r\n    }\r\n`\r\n\r\nexport default PasswordGenerator\r\n"],"sourceRoot":""}