{"version":3,"sources":["components/NotesApp.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["Note","content","index","contentChange","contentDelete","useState","edit","setEdit","useEffect","className","onClick","value","onChange","e","target","NotesApp","styled","notes","setNotes","mount","useRef","i","items","splice","current","Storage","localStorage","getItem","JSON","parse","setItem","stringify","map","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"qKAGMA,EAAO,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC3C,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OALAC,qBAAU,WACDP,GACDM,GAAQ,KACb,CAACN,IAGA,sBAAKQ,UAAU,OAAf,UACI,sBAAKA,UAAU,QAAf,UACI,wBAAQA,UAAU,OAAOC,QAAS,WAC9BH,GAASD,IADb,SAGI,mBAAGG,UAAU,kBAEjB,wBAAQA,UAAU,SAASC,QAAS,WAChCN,EAAcF,IADlB,SAGI,mBAAGO,UAAU,0BAGrB,qBAAKA,UAAS,eAAUH,EAAO,SAAW,IAA1C,SAAgD,4BAAIL,MAEpD,0BAAUU,MAAOV,EAASQ,UAAYH,EAAkB,GAAX,SAAeM,SAAU,SAACC,GACnEV,EAAcU,EAAEC,OAAOH,MAAOT,UAuDxCa,EAAWC,aAjDC,SAAC,GAAmB,IAAjBP,EAAgB,EAAhBA,UACjB,EAA0BJ,mBAAS,IAAnC,mBAAOY,EAAP,KAAcC,EAAd,KACMC,EAAQC,mBACRjB,EAAgB,SAACF,EAASoB,GAC5B,IAAIC,EAAK,YAAOL,GAChBK,EAAMD,GAAGpB,QAAUA,EACnBiB,EAASI,IAGPlB,EAAgB,SAACiB,GACnB,IAAIC,EAAK,YAAOL,GAChBK,EAAMC,OAAOF,EAAG,GAChBH,EAASI,IAgBb,OAbAd,qBAAU,WACN,IAAKW,EAAMK,QAAS,CAChBL,EAAMK,SAAU,EAChB,IAAIC,EAAUC,aAAaC,QAAQ,aAC/BF,GACAP,EAASU,KAAKC,MAAMJ,OAE7B,IAEHjB,qBAAU,WACNkB,aAAaI,QAAQ,YAAaF,KAAKG,UAAUd,MAClD,CAACA,IAGA,sBAAKR,UAAWA,EAAhB,UACI,yBAAQA,UAAU,MAAMC,QAAS,WAC7BQ,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEhB,QAAS,QADnC,UAGI,mBAAGQ,UAAU,gBAHjB,eAMIQ,EAAMe,KAAI,WAAcX,GAAO,IAAlBpB,EAAiB,EAAjBA,QACT,OAAO,cAACD,EAAD,CAEHE,MAAOmB,EACPpB,QAASA,EACTE,cAAeA,EACfC,cAAeA,GAJViB,WAWZL,CAAH,utDAsFCD,a,0FCpKA,SAASkB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE","file":"static/js/13.7605457f.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Note = ({ content, index, contentChange, contentDelete }) => {\r\n    const [edit, setEdit] = useState(false);\r\n    useEffect(() => {\r\n        if (!content)\r\n            setEdit(true);\r\n    }, [content]);\r\n\r\n    return (\r\n        <div className=\"note\">\r\n            <div className=\"tools\">\r\n                <button className=\"edit\" onClick={() => {\r\n                    setEdit(!edit);\r\n                }}>\r\n                    <i className=\"fas fa-edit\"></i>\r\n                </button>\r\n                <button className=\"delete\" onClick={() => {\r\n                    contentDelete(index);\r\n                }}>\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n                </button>\r\n            </div>\r\n            <div className={`main ${edit ? \"hidden\" : \"\"}`}><p>{content}</p>\r\n            </div>\r\n            <textarea value={content} className={!edit ? \"hidden\" : \"\"} onChange={(e) => {\r\n                contentChange(e.target.value, index);\r\n            }}></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Container = ({ className }) => {\r\n    const [notes, setNotes] = useState([]);\r\n    const mount = useRef();\r\n    const contentChange = (content, i) => {\r\n        let items = [...notes];\r\n        items[i].content = content;\r\n        setNotes(items);\r\n    }\r\n\r\n    const contentDelete = (i) => {\r\n        let items = [...notes];\r\n        items.splice(i, 1);\r\n        setNotes(items);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!mount.current) {\r\n            mount.current = true;\r\n            let Storage = localStorage.getItem(\"NotesApps\");\r\n            if (Storage)\r\n                setNotes(JSON.parse(Storage));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"NotesApps\", JSON.stringify(notes));\r\n    }, [notes]);\r\n\r\n    return (\r\n        <div className={className}>\r\n            <button className=\"add\" onClick={() => {\r\n                setNotes([...notes, { content: \"\" }]);\r\n            }}>\r\n                <i className=\"fas fa-plus\"></i> Add note\r\n            </button>\r\n            {\r\n                notes.map(({ content }, i) => {\r\n                    return <Note\r\n                        key={i}\r\n                        index={i}\r\n                        content={content}\r\n                        contentChange={contentChange}\r\n                        contentDelete={contentDelete} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NotesApp = styled(Container)`\r\n    & {\r\n        background-color: #7bdaf3;\r\n        font-family: 'Poppins', sans-serif;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        height: calc(100vh - 80px);\r\n        position: relative;\r\n        top: 80px;\r\n        margin: 0;\r\n        padding-top: 3rem;\r\n        overflow: hidden;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    & * {\r\n        outline: none;\r\n    }\r\n    \r\n    &::-webkit-scrollbar, .note::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n\r\n    .add {\r\n        position: fixed;\r\n        top: calc(1rem + 80px);\r\n        right: 1rem;\r\n        background-color: #9ec862;\r\n        color: #fff;\r\n        border: none;\r\n        border-radius: 3px;\r\n        padding: 0.5rem 1rem;\r\n        cursor: pointer;\r\n    }\r\n    \r\n    .add:active {\r\n        transform: scale(0.98);\r\n    }\r\n    \r\n    .note {\r\n        background-color: #fff;\r\n        box-shadow: 0 0 10px 4px rgba(0, 0, 0, 0.1);\r\n        margin: 30px 20px;\r\n        height: 400px;\r\n        width: 400px;\r\n    }\r\n    \r\n    .note .tools {\r\n        background-color: #9ec862;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        padding: 0.5rem;\r\n    }\r\n    \r\n    .note .tools button {\r\n        background-color: transparent;\r\n        border: none;\r\n        color: #fff;\r\n        cursor: pointer;\r\n        font-size: 1rem;\r\n        margin-left: 0.5rem;\r\n    }\r\n    \r\n    .note textarea {\r\n        outline: none;\r\n        font-family: inherit;\r\n        font-size: 1.2rem;\r\n        border: none;\r\n        height: 400px;\r\n        width: 100%;\r\n        padding: 20px;\r\n    }\r\n    \r\n    .main {\r\n        padding: 20px;\r\n    }\r\n\r\n    .main p {\r\n        white-space: pre-wrap;\r\n    }\r\n    \r\n    .hidden {\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport default NotesApp\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}