{"version":3,"sources":["components/GoodCheapFast.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["GoodCheapFast","styled","className","useState","id","check","value","setValue","inputHandle","e","items","forEach","i","target","name","checked","map","type","onChange","htmlFor","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"qKAgDMA,EAAgBC,aA7CJ,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjB,EAA0BC,mBAAS,CAC/B,CACIC,GAAI,OAAQC,OAAO,GAEvB,CACID,GAAI,QAASC,OAAO,GAExB,CACID,GAAI,OAAQC,OAAO,KAR3B,mBAAOC,EAAP,KAAcC,EAAd,KAYMC,EAAc,SAACC,GACjB,IAAIC,EAAK,YAAOJ,GAChBI,EAAMC,SAAQ,WAASC,GAAM,EAAZR,KACFK,EAAEI,OAAOC,OAChBJ,EAAME,GAAGP,MAAQI,EAAEI,OAAOE,YAElCR,EAASG,IAEb,OACI,sBAAKR,UAAWA,EAAhB,UACI,qEAEII,EAAMU,KAAI,WAAgBJ,GAAO,IAApBR,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,MACb,OAAO,sBAAaH,UAAU,mBAAvB,UACH,uBACIe,KAAK,WACLF,QAASV,EACTS,KAAMV,EACNA,GAAIA,EACJF,UAAU,SACVgB,SAAUV,IACd,uBAAOW,QAASf,EAAIF,UAAU,QAA9B,SACI,qBAAKA,UAAU,WAEnB,+BAAOE,MAXMQ,WAmBfX,CAAH,swDAkFJD,a,0FC9HA,SAASoB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE","file":"static/js/10.ec761a1f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = ({ className }) => {\r\n    const [value, setValue] = useState([\r\n        {\r\n            id: \"Good\", check: false\r\n        },\r\n        {\r\n            id: \"Cheap\", check: false\r\n        },\r\n        {\r\n            id: \"Fast\", check: false\r\n        }\r\n    ]);\r\n\r\n    const inputHandle = (e) => {\r\n        let items = [...value];\r\n        items.forEach(({ id }, i) => {\r\n            if (id === e.target.name)\r\n                items[i].check = e.target.checked;\r\n        })\r\n        setValue(items);\r\n    }\r\n    return (\r\n        <div className={className}>\r\n            <h2>How do you want your project to be?</h2>\r\n            {\r\n                value.map(({ id, check }, i) => {\r\n                    return <div key={i} className=\"toggle-container\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={check}\r\n                            name={id}\r\n                            id={id}\r\n                            className=\"toggle\"\r\n                            onChange={inputHandle} />\r\n                        <label htmlFor={id} className=\"label\">\r\n                            <div className=\"ball\"></div>\r\n                        </label>\r\n                        <span>{id}</span>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst GoodCheapFast = styled(Container)`\r\n    & {\r\n        font-family: 'Roboto', sans-serif;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: calc(100vh - 80px);\r\n        position: relative;\r\n        top: 80px;\r\n        overflow: hidden;\r\n        margin: 0;\r\n    }\r\n    \r\n    .toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 10px 0;\r\n        width: 200px;\r\n    }\r\n    \r\n    .toggle {\r\n        visibility: hidden;\r\n    }\r\n    \r\n    .label {\r\n        position: relative;\r\n        background-color: #d0d0d0;\r\n        border-radius: 50px;\r\n        cursor: pointer;\r\n        display: inline-block;\r\n        margin: 0 15px 0;\r\n        width: 80px;\r\n        height: 40px;\r\n    }\r\n    \r\n    .toggle:checked + .label {\r\n        background-color: #8e44ad;\r\n    }\r\n    \r\n    .ball {\r\n        background: #fff;\r\n        height: 34px;\r\n        width: 34px;\r\n        border-radius: 50%;\r\n        position: absolute;\r\n        top: 3px;\r\n        left: 3px;\r\n        align-items: center;\r\n        justify-content: center;\r\n        animation: slideOff 0.3s linear forwards;\r\n    }\r\n    \r\n    .toggle:checked + .label .ball {\r\n        animation: slideOn 0.3s linear forwards;\r\n    }\r\n    \r\n    @keyframes slideOn {\r\n        0% {\r\n        transform: translateX(0) scale(1);\r\n        }\r\n        50% {\r\n        transform: translateX(20px) scale(1.2);\r\n        }\r\n        100% {\r\n        transform: translateX(40px) scale(1);\r\n        }\r\n    }\r\n    \r\n    @keyframes slideOff {\r\n        0% {\r\n        transform: translateX(40px) scale(1);\r\n        }\r\n        50% {\r\n        transform: translateX(20px) scale(1.2);\r\n        }\r\n        100% {\r\n        transform: translateX(0) scale(1);\r\n        }\r\n    }\r\n`\r\n\r\nexport default GoodCheapFast\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}