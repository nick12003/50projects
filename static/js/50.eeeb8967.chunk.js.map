{"version":3,"sources":["components/ThemeClock.js"],"names":["ThemeClock","styled","className","days","useState","mode","setMode","Date","now","setNow","timer","useRef","getDeg","type","hours","getHours","hoursForClock","minutes","getMinutes","seconds","getSeconds","padL","str","toString","padStart","useEffect","current","setInterval","clearInterval","onClick","style","transform","time","getTime","year","getFullYear","month","getMonth","date","getDate","day","getDay"],"mappings":"6JAiFMA,EAAaC,aA9ED,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACXC,EAAO,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,YAIxD,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAAIG,MAAnC,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAQC,mBAERC,EAAS,SAACC,GACZ,IAAMC,EAAQN,EAAIO,WACZC,EAAgBF,GAAS,GAAKA,EAAQ,GAAKA,EAC3CG,EAAUT,EAAIU,aACdC,EAAUX,EAAIY,aACpB,OAAQP,GACJ,IAAK,IACD,OAAwB,GAAhBG,EAAqB,GAAe,GAAVC,EAAeE,GAd7C,MAckE,IAC1E,IAAK,IACD,OAAkB,GAAVF,EAAeE,GAfnB,KAewC,IAChD,IAAK,IACD,OAAOA,EAhBH,GAgBuB,IAC/B,QACI,OAAO,IAIbE,EAAO,SAACC,GACV,OAAOA,EAAIC,WAAWC,SAAS,EAAG,MAyBtC,OAPAC,qBAAU,WAEN,OADAf,EAAMgB,QAAUC,aAAY,WAAQlB,EAAO,IAAIF,QAAW,KACnD,WACHqB,cAAclB,EAAMgB,YAEzB,IAGC,sBAAKxB,UAAWA,GAAaG,EAAO,GAAK,SAAzC,UACI,wBAAQH,UAAU,SAAS2B,QAAS,WAChCvB,GAASD,IADb,SAGKA,EAAO,YAAc,eAE1B,sBAAKH,UAAU,kBAAf,UACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAc4B,MAAO,CAAEC,UAAU,iCAAD,OAAmCnB,EAAO,KAA1C,WAC/C,qBAAKV,UAAU,gBAAgB4B,MAAO,CAAEC,UAAU,iCAAD,OAAmCnB,EAAO,KAA1C,WACjD,qBAAKV,UAAU,gBAAgB4B,MAAO,CAAEC,UAAU,iCAAD,OAAmCnB,EAAO,KAA1C,WACjD,qBAAKV,UAAU,oBAGnB,qBAAKA,UAAU,OAAf,SArCI,SAAC8B,GACb,IAAMlB,EAAQkB,EAAKjB,WACbE,EAAUe,EAAKd,aACfC,EAAUa,EAAKZ,aACrB,MAAM,GAAN,OAAUN,EAAV,YAAmBO,EAAKJ,GAAxB,YAAoCI,EAAKF,IAkC5Bc,CAAQzB,KAEb,qBAAKN,UAAU,OAAf,SAjCI,SAAC8B,GACb,IAAME,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WACbC,EAAON,EAAKO,UACZC,EAAMR,EAAKS,SACjB,MAAM,GAAN,OAAUP,EAAV,cAAoBb,EAAKe,EAAQ,GAAjC,cAAyCf,EAAKiB,GAA9C,YAAuDnC,EAAKqC,IA6B/CD,CAAQ/B,aAOVP,CAAH,kpFA0HDD","file":"static/js/50.eeeb8967.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = ({ className }) => {\r\n    const days = [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"Saturday\"];\r\n    const h_total = 24 * 60 * 60;\r\n    const m_total = 60 * 60;\r\n    const s_total = 60;\r\n    const [mode, setMode] = useState(true);\r\n    const [now, setNow] = useState(new Date());\r\n    const timer = useRef();\r\n\r\n    const getDeg = (type) => {\r\n        const hours = now.getHours();\r\n        const hoursForClock = hours >= 13 ? hours % 12 : hours;\r\n        const minutes = now.getMinutes();\r\n        const seconds = now.getSeconds();\r\n        switch (type) {\r\n            case \"h\":\r\n                return (hoursForClock * 60 * 60 + minutes * 60 + seconds) / h_total * 360;\r\n            case \"m\":\r\n                return (minutes * 60 + seconds) / m_total * 360;\r\n            case \"s\":\r\n                return seconds / s_total * 360;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    const padL = (str) => {\r\n        return str.toString().padStart(2, '0');\r\n    }\r\n\r\n    const getTime = (time) => {\r\n        const hours = time.getHours();\r\n        const minutes = time.getMinutes();\r\n        const seconds = time.getSeconds();\r\n        return `${hours}:${padL(minutes)}:${padL(seconds)}`;\r\n    }\r\n\r\n    const getDate = (time) => {\r\n        const year = time.getFullYear();\r\n        const month = time.getMonth();\r\n        const date = time.getDate();\r\n        const day = time.getDay();\r\n        return `${year} - ${padL(month + 1)} - ${padL(date)} ${days[day]}`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        timer.current = setInterval(() => { setNow(new Date()) }, 1000);\r\n        return () => {\r\n            clearInterval(timer.current);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={className + (mode ? \"\" : \" dark\")}>\r\n            <button className=\"toggle\" onClick={() => {\r\n                setMode(!mode);\r\n            }}>\r\n                {mode ? \"Dark mode\" : \"Light mode\"}\r\n            </button>\r\n            <div className=\"clock-container\">\r\n                <div className=\"clock\">\r\n                    <div className=\"needle hour\" style={{ transform: `translate(-50%, -100%) rotate(${getDeg(\"h\")}deg)` }}></div>\r\n                    <div className=\"needle minute\" style={{ transform: `translate(-50%, -100%) rotate(${getDeg(\"m\")}deg)` }}></div>\r\n                    <div className=\"needle second\" style={{ transform: `translate(-50%, -100%) rotate(${getDeg(\"s\")}deg)` }}></div>\r\n                    <div className=\"center-point\"></div>\r\n                </div>\r\n\r\n                <div className=\"time\">\r\n                    {getTime(now)}\r\n                </div>\r\n                <div className=\"date\">\r\n                    {getDate(now)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ThemeClock = styled(Container)`\r\n    --primary-color: #000;\r\n    --secondary-color: #fff;\r\n\r\n    & {\r\n        font-family: 'Heebo', sans-serif;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 100vh;\r\n        overflow: hidden;\r\n        margin: 0;\r\n        transition: all 0.5s ease-in;\r\n    }\r\n\r\n    &.dark {\r\n        background-color: #111;\r\n        color: var(--secondary-color);\r\n    }\r\n    \r\n    .toggle {\r\n        cursor: pointer;\r\n        background-color: var(--primary-color);\r\n        color: var(--secondary-color);\r\n        border: 0;\r\n        border-radius: 4px;\r\n        padding: 8px 12px;\r\n        position: absolute;\r\n        top: 100px;\r\n    }\r\n\r\n    &.dark .toggle {\r\n        background-color: var(--secondary-color);\r\n        color: var(--primary-color);\r\n    }\r\n    \r\n    .toggle:focus {\r\n        outline: none;\r\n    }\r\n    \r\n    .clock-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    \r\n    .clock {\r\n        position: relative;\r\n        width: 200px;\r\n        height: 200px;\r\n    }\r\n    \r\n    .needle {\r\n        background-color: var(--primary-color);\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        height: 65px;\r\n        width: 3px;\r\n        transform-origin: bottom center;\r\n        transition: all 0.5s ease-in;\r\n    }\r\n\r\n    &.dark .needle {\r\n        background-color: var(--secondary-color);\r\n    }\r\n    \r\n    .needle.hour {\r\n        transform: translate(-50%, -100%) rotate(0deg);\r\n    }\r\n    \r\n    .needle.minute {\r\n        transform: translate(-50%, -100%) rotate(0deg);\r\n        height: 100px;\r\n    }\r\n    \r\n    .needle.second {\r\n        transform: translate(-50%, -100%) rotate(0deg);\r\n        height: 100px;\r\n        background-color: #e74c3c;\r\n    }\r\n    \r\n    .center-point {\r\n        background-color: #e74c3c;\r\n        width: 10px;\r\n        height: 10px;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        border-radius: 50%;\r\n    }\r\n    \r\n    .center-point::after {\r\n        content: '';\r\n        background-color: var(--primary-color);\r\n        width: 5px;\r\n        height: 5px;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        border-radius: 50%;\r\n    }\r\n\r\n    &.dark .center-point::after {\r\n        background-color: var(--secondary-color);\r\n    }\r\n    \r\n    .time {\r\n        font-size: 60px;\r\n    }\r\n    \r\n    .date {\r\n        color: #aaa;\r\n        font-size: 14px;\r\n        letter-spacing: 0.3px;\r\n        text-transform: uppercase;\r\n    }\r\n`\r\n\r\nexport default ThemeClock\r\n"],"sourceRoot":""}