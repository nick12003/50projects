{"version":3,"sources":["components/AnimatedCountdown.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["AnimatedCountdown","styled","className","useState","finish","setFinish","Array","fill","numbers","setNumbers","setAnimate","index","type","items","start","i","setTimeout","map","num","onAnimationEnd","e","animationName","onClick","length","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"oKAmDMA,EAAoBC,aAhDR,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjB,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAASG,MAAM,GAAGC,KAAK,KAArD,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,SAACC,EAAOC,GACvB,IAAIC,EAAK,YAAOL,GAChBK,EAAMF,GAASC,EACfH,EAAWI,IAETC,EAAQ,SAARA,EAASC,GACPA,EAAI,EACJV,GAAU,IAGdA,GAAU,GACVK,EAAWK,EAAG,MACdC,YAAW,WACPF,EAAMC,EAAI,KACX,OAGP,OACI,sBAAKb,UAAWA,EAAhB,UACI,sBAAKA,UAAS,kBAAaE,EAAS,OAAS,IAA7C,UACI,qBAAKF,UAAU,OAAf,SAEQM,EAAQS,KAAI,SAACC,EAAKH,GACd,OAAO,sBAAcb,UAAWgB,EAC5BC,eAAgB,SAACC,GACW,SAApBA,EAAEC,eACFX,EAAWK,EAAG,QAHnB,SAKCA,GALUA,QAS9B,8CAEJ,sBAAKb,UAAS,gBAAWE,EAAS,OAAS,IAA3C,UACI,oCACA,wBAAQkB,QAAS,WACbR,EAAMN,EAAQe,OAAS,IAD3B,4BAQUtB,CAAH,mnFA6HRD,a,0FC5KA,SAASwB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAInB,MAAMoB,QAAQD,GAAM,OAAO,OAAAE,EAAA,GAAiBF,GDGzC,CAAkBA,IELZ,SAA0BG,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOtB,MAAM0B,KAAKJ,GFIvD,CAAgBH,IAAQ,OAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","file":"static/js/7.ae7b0f6e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = ({ className }) => {\r\n    const [finish, setFinish] = useState(true);\r\n    const [numbers, setNumbers] = useState(Array(4).fill(\"\"));\r\n\r\n    const setAnimate = (index, type) => {\r\n        let items = [...numbers];\r\n        items[index] = type;\r\n        setNumbers(items);\r\n    }\r\n    const start = (i) => {\r\n        if (i < 0) {\r\n            setFinish(true);\r\n            return;\r\n        }\r\n        setFinish(false);\r\n        setAnimate(i, \"in\");\r\n        setTimeout(() => {\r\n            start(i - 1);\r\n        }, 1000);\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className={`counter ${finish ? \"hide\" : \"\"}`}>\r\n                <div className=\"nums\">\r\n                    {\r\n                        numbers.map((num, i) => {\r\n                            return <span key={i} className={num}\r\n                                onAnimationEnd={(e) => {\r\n                                    if (e.animationName === \"goIn\") {\r\n                                        setAnimate(i, \"out\");\r\n                                    }\r\n                                }}>{i}</span>\r\n                        })\r\n                    }\r\n                </div>\r\n                <h4>Get Ready</h4>\r\n            </div>\r\n            <div className={`final ${finish ? \"show\" : \"\"}`}>\r\n                <h1>GO</h1>\r\n                <button onClick={() => {\r\n                    start(numbers.length - 1);\r\n                }}>Replay</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AnimatedCountdown = styled(Container)`\r\n    & {\r\n        font-family: 'Roboto', sans-serif;\r\n        margin: 0;\r\n        height: calc(100vh - 80px);\r\n        position: relative;\r\n        top: 80px;\r\n        overflow: hidden;\r\n    }\r\n    \r\n    h4 {\r\n        font-size: 20px;\r\n        margin: 5px;\r\n        text-transform: uppercase;\r\n    }\r\n    \r\n    .counter {\r\n        position: fixed;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        text-align: center;\r\n    }\r\n    \r\n    .counter.hide {\r\n        transform: translate(-50%, -50%) scale(0);\r\n        animation: hide 0.2s ease-out;\r\n    }\r\n    \r\n    @keyframes hide {\r\n        0% {\r\n        transform: translate(-50%, -50%) scale(1);\r\n        }\r\n    \r\n        100% {\r\n        transform: translate(-50%, -50%) scale(0);\r\n        }\r\n    }\r\n    \r\n    .final {\r\n        position: fixed;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%) scale(0);\r\n        text-align: center;\r\n    }\r\n    \r\n    .final.show {\r\n        transform: translate(-50%, -50%) scale(1);\r\n        animation: show 0.2s ease-out;\r\n    }\r\n    \r\n    @keyframes show {\r\n        0% {\r\n        transform: translate(-50%, -50%) scale(0);\r\n        }\r\n    \r\n        30% {\r\n        transform: translate(-50%, -50%) scale(1.4);\r\n        }\r\n    \r\n        100% {\r\n        transform: translate(-50%, -50%) scale(1);\r\n        }\r\n    }\r\n    \r\n    .nums {\r\n        color: #3498db;\r\n        font-size: 50px;\r\n        position: relative;\r\n        overflow: hidden;\r\n        width: 250px;\r\n        height: 50px;\r\n    }\r\n    \r\n    .nums span {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%) rotate(120deg);\r\n        transform-origin: bottom center;\r\n    }\r\n    \r\n    .nums span.in {\r\n        transform: translate(-50%, -50%) rotate(0deg);\r\n        animation: goIn 0.5s ease-in-out;\r\n    }\r\n    \r\n    .nums span.out {\r\n        animation: goOut 0.5s ease-in-out;\r\n    }\r\n    \r\n    @keyframes goIn {\r\n        0% {\r\n        transform: translate(-50%, -50%) rotate(120deg);\r\n        }\r\n    \r\n        30% {\r\n        transform: translate(-50%, -50%) rotate(-20deg);\r\n        }\r\n    \r\n        60% {\r\n        transform: translate(-50%, -50%) rotate(10deg);\r\n        }\r\n    \r\n        100% {\r\n        transform: translate(-50%, -50%) rotate(0deg);\r\n        }\r\n    }\r\n    \r\n    @keyframes goOut {\r\n        0% {\r\n        transform: translate(-50%, -50%) rotate(0deg);\r\n        }\r\n    \r\n        60% {\r\n        transform: translate(-50%, -50%) rotate(20deg);\r\n        }\r\n    \r\n        100% {\r\n        transform: translate(-50%, -50%) rotate(-120deg);\r\n        }\r\n    }\r\n`\r\n\r\nexport default AnimatedCountdown\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}