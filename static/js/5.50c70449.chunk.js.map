{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/Pokedex.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","colors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","main_types","Object","keys","Pokedex","styled","className","useState","pokemons","setPokemons","fetchPokemons","a","datas","i","fetch","res","json","name","id","types","poke_types","map","type","find","indexOf","push","toUpperCase","slice","orgId","toString","padStart","color","useEffect","style","backgroundColor","src","alt","module","exports","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/5.50c70449.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/pokemon/\";\r\nconst IMG_URL = \"https://pokeres.bastionbot.org/images/pokemon/\";\r\nconst colors = {\r\n    fire: '#FDDFDF',\r\n    grass: '#DEFDE0',\r\n    electric: '#FCF7DE',\r\n    water: '#DEF3FD',\r\n    ground: '#f4e7da',\r\n    rock: '#d5d5d4',\r\n    fairy: '#fceaff',\r\n    poison: '#98d7a5',\r\n    bug: '#f8d5a3',\r\n    dragon: '#97b3e6',\r\n    psychic: '#eaeda1',\r\n    flying: '#F5F5F5',\r\n    fighting: '#E6E0D4',\r\n    normal: '#F5F5F5'\r\n}\r\nconst main_types = Object.keys(colors);\r\n\r\nconst Container = ({ className }) => {\r\n\r\n\r\n    const [pokemons, setPokemons] = useState([]);\r\n\r\n    const fetchPokemons = async () => {\r\n        let datas = [];\r\n        for (let i = 1; i <= 150; i++) {\r\n            const res = await fetch(API_URL + i);\r\n            const { name, id, types } = await res.json();\r\n            let poke_types = types.map(type => type.type.name);\r\n            let type = main_types.find(type => poke_types.indexOf(type) > -1);\r\n            datas.push({\r\n                name: name[0].toUpperCase() + name.slice(1),\r\n                orgId: id,\r\n                id: id.toString().padStart(3, \"0\"),\r\n                type: type,\r\n                color: colors[type]\r\n            });\r\n        }\r\n        setPokemons(datas);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPokemons();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={className}>\r\n            <h1>Pokedex</h1>\r\n            <div className=\"poke-container\">\r\n                {\r\n                    pokemons.map(({ orgId, id, name, type, color }, i) => {\r\n                        return <div key={i} className=\"pokemon\" style={{ backgroundColor: color }}>\r\n                            <div className=\"img-container\">\r\n                                <img src={IMG_URL + orgId + \".png\"} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"info\">\r\n                                <span className=\"number\">#{id}</span>\r\n                                <h3 className=\"name\">{name}</h3>\r\n                                <small className=\"type\">Type: <span>{type}</span></small>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Pokedex = styled(Container)`\r\n    & {\r\n        background: #efefbb;\r\n        background: linear-gradient(to right, #d4d3dd, #efefbb);\r\n        font-family: 'Lato', sans-serif;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        height: calc(100vh - 80px);\r\n        position: relative;\r\n        top: 80px;\r\n        margin: 0;\r\n        overflow-y: scroll;\r\n    }\r\n\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    \r\n    h1 {\r\n        letter-spacing: 3px;\r\n        display: block;\r\n        font-size: 2em;\r\n        margin-block-start: 0.67em;\r\n        margin-block-end: 0.67em;\r\n        margin-inline-start: 0px;\r\n        margin-inline-end: 0px;\r\n        font-weight: bold;\r\n    }\r\n    \r\n    .poke-container {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: space-between;\r\n        justify-content: center;\r\n        position: absolute;\r\n        top: 0;\r\n        margin: 80px auto;\r\n        max-width: 1200px;\r\n    }\r\n    \r\n    .pokemon {\r\n        background-color: #eee;\r\n        border-radius: 10px;\r\n        box-shadow: 0 3px 15px rgba(100, 100, 100, 0.5);\r\n        margin: 10px;\r\n        padding: 20px;\r\n        text-align: center;\r\n    }\r\n    \r\n    .pokemon .img-container {\r\n        background-color: rgba(255, 255, 255, 0.6);\r\n        border-radius: 50%;\r\n        width: 120px;\r\n        height: 120px;\r\n        text-align: center;\r\n    }\r\n    \r\n    .pokemon .img-container img {\r\n        max-width: 90%;\r\n        margin-top: 20px;\r\n    }\r\n    \r\n    .pokemon .info {\r\n        margin-top: 20px;\r\n    }\r\n    \r\n    .pokemon .info .number {\r\n        background-color: rgba(0, 0, 0, 0.1);\r\n        padding: 5px 10px;\r\n        border-radius: 10px;\r\n        font-size: 0.8em;\r\n    }\r\n    \r\n    .pokemon .info .name {\r\n        margin: 15px 0 7px;\r\n        letter-spacing: 1px;\r\n    }\r\n`\r\n\r\nexport default Pokedex\r\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}