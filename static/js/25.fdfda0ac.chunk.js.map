{"version":3,"sources":["components/BlurryLoading.js"],"names":["useRate","value","useState","rate","setRate","mounted","useRef","tm","tmTwo","useEffect","current","clearTimeout","setTimeout","BlurryLoading","styled","className","positive","setPositive","negative","setNegative","positiveP","negativeP","style","filter","opacity"],"mappings":"6JAGMA,EAAU,SAACC,GACb,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUC,mBACVC,EAAKD,mBACLE,EAAQF,mBAqBd,OAnBAG,qBAAU,WACDJ,EAAQK,QAKLP,EAAOF,GACHM,EAAGG,SACHC,aAAaJ,EAAGG,SACpBF,EAAME,QAAUE,YAAW,WAAQR,EAAQD,EAAO,KAAM,KAEnDA,EAAOF,IACRO,EAAME,SACNC,aAAaH,EAAME,SACvBH,EAAGG,QAAUE,YAAW,WAAQR,EAAQD,EAAO,KAAM,MAZzDC,EAAQH,GACRI,EAAQK,SAAU,KAevB,CAACT,EAAOE,IACJA,GAwBLU,EAAgBC,aArBJ,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjB,EAAgCb,mBAAS,GAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KACA,EAAgCf,mBAAS,KAAzC,mBAAOgB,EAAP,KAAiBC,EAAjB,KACMC,EAAYpB,EAAQgB,GACpBK,EAAYrB,EAAQkB,GAS1B,OARAT,qBAAU,WACFW,EAAY,KACZH,EAAYG,EAAY,KAC7B,CAACA,IACJX,qBAAU,WACFY,EAAY,GACZF,EAAYE,EAAY,KAC7B,CAACA,IAEA,sBAAKN,UAAWA,EAAhB,UACI,yBAASA,UAAU,KAAKO,MAAO,CAAEC,OAAO,QAAD,OAAUF,EAAY,GAAtB,UACvC,sBAAKN,UAAU,eAAeO,MAAO,CAAEE,QAAQ,GAAD,OAAKH,EAAY,MAA/D,UAAyED,EAAzE,YAKUN,CAAH,wzBAgCJD","file":"static/js/25.fdfda0ac.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst useRate = (value) => {\r\n    const [rate, setRate] = useState(0);\r\n    const mounted = useRef();\r\n    const tm = useRef();\r\n    const tmTwo = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!mounted.current) {\r\n            setRate(value);\r\n            mounted.current = true;\r\n        }\r\n        else {\r\n            if (rate > value) {\r\n                if (tm.current)\r\n                    clearTimeout(tm.current)\r\n                tmTwo.current = setTimeout(() => { setRate(rate - 1) }, 20);\r\n            }\r\n            else if (rate < value) {\r\n                if (tmTwo.current)\r\n                    clearTimeout(tmTwo.current)\r\n                tm.current = setTimeout(() => { setRate(rate + 1) }, 20);\r\n            }\r\n        }\r\n\r\n    }, [value, rate]);\r\n    return rate;\r\n}\r\n\r\nconst Container = ({ className }) => {\r\n    const [positive, setPositive] = useState(0);\r\n    const [negative, setNegative] = useState(100);\r\n    const positiveP = useRate(positive);\r\n    const negativeP = useRate(negative);\r\n    useEffect(() => {\r\n        if (positiveP < 100)\r\n            setPositive(positiveP + 1);\r\n    }, [positiveP])\r\n    useEffect(() => {\r\n        if (negativeP > 0)\r\n            setNegative(negativeP - 1);\r\n    }, [negativeP])\r\n    return (\r\n        <div className={className}>\r\n            <section className=\"bg\" style={{ filter: `blur(${negativeP / 10}px)` }}></section>\r\n            <div className=\"loading-text\" style={{ opacity: `${negativeP / 100}` }}>{positiveP}%</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BlurryLoading = styled(Container)`\r\n    & {\r\n        font-family: 'Ubuntu', sans-serif;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: calc(100vh - 80px);\r\n        position: relative;\r\n        top: 80px;\r\n        overflow: hidden;\r\n        margin: 0;\r\n    }\r\n    \r\n    .bg {\r\n        background: url('https://images.unsplash.com/photo-1576161787924-01bb08dad4a4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2104&q=80')\r\n        no-repeat center center/cover;\r\n        position: absolute;\r\n        top: -30px;\r\n        left: -30px;\r\n        width: calc(100vw + 60px);\r\n        height: calc(100vh - 80px + 60px);\r\n        z-index: -1;\r\n        filter: blur(0px);\r\n    }\r\n    \r\n    .loading-text {\r\n        font-size: 50px;\r\n        color: #fff;\r\n    }\r\n  \r\n`\r\n\r\nexport default BlurryLoading\r\n"],"sourceRoot":""}