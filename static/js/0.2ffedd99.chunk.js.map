{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/LiveUserFilter.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","LiveUserFilter","styled","className","useState","users","setUsers","getData","a","fetch","res","json","results","map","i","large","picture","name","first","last","location","city","country","hide","useEffect","type","placeholder","onChange","e","target","toLowerCase","item","forEach","includes","src","alt","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","module","exports","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"0GAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,qHC4DMC,EAAiBC,aAzDL,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAO,uCAAG,gCAAAC,EAAA,sEACMC,MAAM,wCADZ,cACNC,EADM,gBAEcA,EAAIC,OAFlB,gBAEJC,EAFI,EAEJA,QACRN,EAASM,EAAQC,KAAI,WAIlBC,GAAO,IAHKC,EAGN,EAHLC,QAAWD,MAGN,IAFLE,KAAQC,EAEH,EAFGA,MAAOC,EAEV,EAFUA,KAEV,IADLC,SAEA,MAAO,CAAEL,QAAOG,QAAOC,OAAME,KADxB,EADOA,KAEuBC,QAD9B,EADaA,QAE0BC,MAAM,OAR1C,2CAAH,qDAgBb,OAJAC,qBAAU,WACNjB,MACD,IAGC,qBAAKJ,UAAWA,EAAhB,SACI,sBAAKA,UAAU,YAAf,UACI,yBAAQA,UAAU,SAAlB,UACI,oBAAIA,UAAU,QAAd,8BACA,uBAAOA,UAAU,WAAjB,4CACA,uBAAOsB,KAAK,OAAOC,YAAY,SAASC,SAAU,SAACC,GAC/C,IAAIzC,EAAQyC,EAAEC,OAAO1C,MAAM2C,cACvBC,EAAI,YAAO1B,GACf0B,EAAKC,SAAQ,WAAwClB,IAAM,EAA3CC,MACE,IADyC,EAApCG,MACS,IAD2B,EAA7BC,KACe,IADc,EAAvBE,KACsB,IADC,EAAjBC,SAC+BQ,cAAcG,SAAS9C,GAGxF4C,EAAKjB,GAAGS,MAAO,EAFfQ,EAAKjB,GAAGS,MAAO,KAKvBjB,EAASyB,SAIjB,oBAAI5B,UAAU,YAAd,SAEQE,EAAMQ,KAAI,WAA8CC,GAAO,IAAlDS,EAAiD,EAAjDA,KAAMR,EAA2C,EAA3CA,MAAOG,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAAME,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,QACzC,OAAO,qBAAYnB,UAAWoB,EAAO,OAAS,GAAvC,UACH,qBAAKW,IAAKnB,EAAOoB,IAAKjB,IACtB,sBAAKf,UAAU,YAAf,UACI,uCAAQe,EAAR,YAAiBC,KACjB,sCAAOE,EAAP,aAAgBC,UAJRR,eAerBZ,CAAH,k0DA6FLD,a,0FCrJA,SAASmC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,mBIL9FC,EAAOC,QAAU,EAAQ,K,mBCOzB,IAAIC,EAAW,SAAUD,GACvB,aAEA,IAEIjD,EAFAmD,EAAKP,OAAOQ,UACZC,EAASF,EAAGG,eAEZC,EAA4B,oBAAXb,OAAwBA,OAAS,GAClDc,EAAiBD,EAAQZ,UAAY,aACrCc,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQK,aAAe,gBAE/C,SAASC,EAAOC,EAAK9E,EAAKG,GAOxB,OANAyD,OAAOmB,eAAeD,EAAK9E,EAAK,CAC9BG,MAAOA,EACP6E,YAAY,EACZC,cAAc,EACdC,UAAU,IAELJ,EAAI9E,GAEb,IAEE6E,EAAO,GAAI,IACX,MAAO9D,GACP8D,EAAS,SAASC,EAAK9E,EAAKG,GAC1B,OAAO2E,EAAI9E,GAAOG,GAItB,SAASgF,EAAKC,EAASC,EAAS3E,EAAM4E,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQjB,qBAAqBoB,EAAYH,EAAUG,EAC/EC,EAAY7B,OAAO8B,OAAOH,EAAenB,WACzCuB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAsMZ,SAA0BT,EAAS1E,EAAMiF,GACvC,IAAIG,EAAQC,EAEZ,OAAO,SAAgBC,EAAQ/F,GAC7B,GAAI6F,IAAUG,EACZ,MAAM,IAAIC,MAAM,gCAGlB,GAAIJ,IAAUK,EAAmB,CAC/B,GAAe,UAAXH,EACF,MAAM/F,EAKR,OAAOmG,IAMT,IAHAT,EAAQK,OAASA,EACjBL,EAAQ1F,IAAMA,IAED,CACX,IAAIoG,EAAWV,EAAQU,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUV,GACnD,GAAIW,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBX,EAAQK,OAGVL,EAAQc,KAAOd,EAAQe,MAAQf,EAAQ1F,SAElC,GAAuB,UAAnB0F,EAAQK,OAAoB,CACrC,GAAIF,IAAUC,EAEZ,MADAD,EAAQK,EACFR,EAAQ1F,IAGhB0F,EAAQgB,kBAAkBhB,EAAQ1F,SAEN,WAAnB0F,EAAQK,QACjBL,EAAQiB,OAAO,SAAUjB,EAAQ1F,KAGnC6F,EAAQG,EAER,IAAIY,EAASC,EAAS1B,EAAS1E,EAAMiF,GACrC,GAAoB,WAAhBkB,EAAOpE,KAAmB,CAO5B,GAJAqD,EAAQH,EAAQtF,KACZ8F,EACAY,EAEAF,EAAO5G,MAAQuG,EACjB,SAGF,MAAO,CACLrG,MAAO0G,EAAO5G,IACdI,KAAMsF,EAAQtF,MAGS,UAAhBwG,EAAOpE,OAChBqD,EAAQK,EAGRR,EAAQK,OAAS,QACjBL,EAAQ1F,IAAM4G,EAAO5G,OA9QP+G,CAAiB5B,EAAS1E,EAAMiF,GAE7CF,EAcT,SAASqB,EAASrG,EAAIqE,EAAK7E,GACzB,IACE,MAAO,CAAEwC,KAAM,SAAUxC,IAAKQ,EAAGwG,KAAKnC,EAAK7E,IAC3C,MAAOc,GACP,MAAO,CAAE0B,KAAM,QAASxC,IAAKc,IAhBjCkD,EAAQkB,KAAOA,EAoBf,IAAIY,EAAyB,iBACzBgB,EAAyB,iBACzBd,EAAoB,YACpBE,EAAoB,YAIpBK,EAAmB,GAMvB,SAAShB,KACT,SAAS0B,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB5C,GAAkB,WAClC,OAAO7D,MAGT,IAAI0G,EAAWzD,OAAO0D,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BpD,GAC5BE,EAAO4C,KAAKM,EAAyB/C,KAGvC4C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B/C,UAClCoB,EAAUpB,UAAYR,OAAO8B,OAAO0B,GAWtC,SAASM,EAAsBtD,GAC7B,CAAC,OAAQ,QAAS,UAAUpB,SAAQ,SAASgD,GAC3CnB,EAAOT,EAAW4B,GAAQ,SAAS/F,GACjC,OAAOU,KAAKkF,QAAQG,EAAQ/F,SAkClC,SAAS0H,EAAclC,EAAWmC,GAChC,SAASC,EAAO7B,EAAQ/F,EAAKL,EAASC,GACpC,IAAIgH,EAASC,EAASrB,EAAUO,GAASP,EAAWxF,GACpD,GAAoB,UAAhB4G,EAAOpE,KAEJ,CACL,IAAIqF,EAASjB,EAAO5G,IAChBE,EAAQ2H,EAAO3H,MACnB,OAAIA,GACiB,kBAAVA,GACPkE,EAAO4C,KAAK9G,EAAO,WACdyH,EAAYhI,QAAQO,EAAM4H,SAASxH,MAAK,SAASJ,GACtD0H,EAAO,OAAQ1H,EAAOP,EAASC,MAC9B,SAASkB,GACV8G,EAAO,QAAS9G,EAAKnB,EAASC,MAI3B+H,EAAYhI,QAAQO,GAAOI,MAAK,SAASyH,GAI9CF,EAAO3H,MAAQ6H,EACfpI,EAAQkI,MACP,SAAS1H,GAGV,OAAOyH,EAAO,QAASzH,EAAOR,EAASC,MAvBzCA,EAAOgH,EAAO5G,KA4BlB,IAAIgI,EAgCJtH,KAAKkF,QA9BL,SAAiBG,EAAQ/F,GACvB,SAASiI,IACP,OAAO,IAAIN,GAAY,SAAShI,EAASC,GACvCgI,EAAO7B,EAAQ/F,EAAKL,EAASC,MAIjC,OAAOoI,EAaLA,EAAkBA,EAAgB1H,KAChC2H,EAGAA,GACEA,KAkHV,SAAS3B,EAAoBF,EAAUV,GACrC,IAAIK,EAASK,EAAS1C,SAASgC,EAAQK,QACvC,GAAIA,IAAWhF,EAAW,CAKxB,GAFA2E,EAAQU,SAAW,KAEI,UAAnBV,EAAQK,OAAoB,CAE9B,GAAIK,EAAS1C,SAAT,SAGFgC,EAAQK,OAAS,SACjBL,EAAQ1F,IAAMe,EACduF,EAAoBF,EAAUV,GAEP,UAAnBA,EAAQK,QAGV,OAAOQ,EAIXb,EAAQK,OAAS,QACjBL,EAAQ1F,IAAM,IAAI8D,UAChB,kDAGJ,OAAOyC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS1C,SAAUgC,EAAQ1F,KAEzD,GAAoB,UAAhB4G,EAAOpE,KAIT,OAHAkD,EAAQK,OAAS,QACjBL,EAAQ1F,IAAM4G,EAAO5G,IACrB0F,EAAQU,SAAW,KACZG,EAGT,IAAItG,EAAO2G,EAAO5G,IAElB,OAAMC,EAOFA,EAAKG,MAGPsF,EAAQU,EAAS8B,YAAcjI,EAAKC,MAGpCwF,EAAQyC,KAAO/B,EAASgC,QAQD,WAAnB1C,EAAQK,SACVL,EAAQK,OAAS,OACjBL,EAAQ1F,IAAMe,GAUlB2E,EAAQU,SAAW,KACZG,GANEtG,GA3BPyF,EAAQK,OAAS,QACjBL,EAAQ1F,IAAM,IAAI8D,UAAU,oCAC5B4B,EAAQU,SAAW,KACZG,GAoDX,SAAS8B,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB5H,KAAKkI,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAI3B,EAAS2B,EAAMQ,YAAc,GACjCnC,EAAOpE,KAAO,gBACPoE,EAAO5G,IACduI,EAAMQ,WAAanC,EAGrB,SAASjB,EAAQN,GAIf3E,KAAKkI,WAAa,CAAC,CAAEJ,OAAQ,SAC7BnD,EAAYtC,QAAQsF,EAAc3H,MAClCA,KAAKsI,OAAM,GA8Bb,SAASzB,EAAO0B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS1E,GAC9B,GAAI2E,EACF,OAAOA,EAAelC,KAAKiC,GAG7B,GAA6B,oBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIvH,GAAK,EAAGsG,EAAO,SAASA,IAC1B,OAAStG,EAAIoH,EAASG,QACpB,GAAIhF,EAAO4C,KAAKiC,EAAUpH,GAGxB,OAFAsG,EAAKjI,MAAQ+I,EAASpH,GACtBsG,EAAK/H,MAAO,EACL+H,EAOX,OAHAA,EAAKjI,MAAQa,EACboH,EAAK/H,MAAO,EAEL+H,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMhC,GAIjB,SAASA,IACP,MAAO,CAAEjG,MAAOa,EAAWX,MAAM,GA+MnC,OA5mBA6G,EAAkB9C,UAAYqD,EAAG6B,YAAcnC,EAC/CA,EAA2BmC,YAAcpC,EACzCA,EAAkBqC,YAAc1E,EAC9BsC,EACAxC,EACA,qBAaFV,EAAQuF,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASxC,GAG2B,uBAAnCwC,EAAKH,aAAeG,EAAKzH,QAIhCgC,EAAQ0F,KAAO,SAASF,GAQtB,OAPI7F,OAAOgG,eACThG,OAAOgG,eAAeH,EAAQtC,IAE9BsC,EAAOI,UAAY1C,EACnBtC,EAAO4E,EAAQ9E,EAAmB,sBAEpC8E,EAAOrF,UAAYR,OAAO8B,OAAO+B,GAC1BgC,GAOTxF,EAAQ6F,MAAQ,SAAS7J,GACvB,MAAO,CAAE8H,QAAS9H,IAsEpByH,EAAsBC,EAAcvD,WACpCuD,EAAcvD,UAAUK,GAAuB,WAC7C,OAAO9D,MAETsD,EAAQ0D,cAAgBA,EAKxB1D,EAAQ8F,MAAQ,SAAS3E,EAASC,EAAS3E,EAAM4E,EAAasC,QACxC,IAAhBA,IAAwBA,EAActH,SAE1C,IAAImD,EAAO,IAAIkE,EACbxC,EAAKC,EAASC,EAAS3E,EAAM4E,GAC7BsC,GAGF,OAAO3D,EAAQuF,oBAAoBnE,GAC/B5B,EACAA,EAAK2E,OAAO7H,MAAK,SAASuH,GACxB,OAAOA,EAAOzH,KAAOyH,EAAO3H,MAAQsD,EAAK2E,WAuKjDV,EAAsBD,GAEtB5C,EAAO4C,EAAI9C,EAAmB,aAO9B8C,EAAGjD,GAAkB,WACnB,OAAO7D,MAGT8G,EAAGuC,SAAW,WACZ,MAAO,sBAkCT/F,EAAQgG,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIjK,KAAOkK,EACdD,EAAKnB,KAAK9I,GAMZ,OAJAiK,EAAKE,UAIE,SAAS/B,IACd,KAAO6B,EAAKZ,QAAQ,CAClB,IAAIrJ,EAAMiK,EAAKG,MACf,GAAIpK,KAAOkK,EAGT,OAFA9B,EAAKjI,MAAQH,EACboI,EAAK/H,MAAO,EACL+H,EAQX,OADAA,EAAK/H,MAAO,EACL+H,IAsCXnE,EAAQuD,OAASA,EAMjB5B,EAAQxB,UAAY,CAClBkF,YAAa1D,EAEbqD,MAAO,SAASoB,GAcd,GAbA1J,KAAK2J,KAAO,EACZ3J,KAAKyH,KAAO,EAGZzH,KAAK8F,KAAO9F,KAAK+F,MAAQ1F,EACzBL,KAAKN,MAAO,EACZM,KAAK0F,SAAW,KAEhB1F,KAAKqF,OAAS,OACdrF,KAAKV,IAAMe,EAEXL,KAAKkI,WAAW7F,QAAQ+F,IAEnBsB,EACH,IAAK,IAAIpI,KAAQtB,KAEQ,MAAnBsB,EAAKsI,OAAO,IACZlG,EAAO4C,KAAKtG,KAAMsB,KACjBmH,OAAOnH,EAAKuI,MAAM,MACrB7J,KAAKsB,GAAQjB,IAMrByJ,KAAM,WACJ9J,KAAKN,MAAO,EAEZ,IACIqK,EADY/J,KAAKkI,WAAW,GACLG,WAC3B,GAAwB,UAApB0B,EAAWjI,KACb,MAAMiI,EAAWzK,IAGnB,OAAOU,KAAKgK,MAGdhE,kBAAmB,SAASiE,GAC1B,GAAIjK,KAAKN,KACP,MAAMuK,EAGR,IAAIjF,EAAUhF,KACd,SAASkK,EAAOC,EAAKC,GAYnB,OAXAlE,EAAOpE,KAAO,QACdoE,EAAO5G,IAAM2K,EACbjF,EAAQyC,KAAO0C,EAEXC,IAGFpF,EAAQK,OAAS,OACjBL,EAAQ1F,IAAMe,KAGN+J,EAGZ,IAAK,IAAIjJ,EAAInB,KAAKkI,WAAWQ,OAAS,EAAGvH,GAAK,IAAKA,EAAG,CACpD,IAAI0G,EAAQ7H,KAAKkI,WAAW/G,GACxB+E,EAAS2B,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOoC,EAAO,OAGhB,GAAIrC,EAAMC,QAAU9H,KAAK2J,KAAM,CAC7B,IAAIU,EAAW3G,EAAO4C,KAAKuB,EAAO,YAC9ByC,EAAa5G,EAAO4C,KAAKuB,EAAO,cAEpC,GAAIwC,GAAYC,EAAY,CAC1B,GAAItK,KAAK2J,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,GACzB,GAAI/H,KAAK2J,KAAO9B,EAAMG,WAC3B,OAAOkC,EAAOrC,EAAMG,iBAGjB,GAAIqC,GACT,GAAIrK,KAAK2J,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,OAG3B,KAAIuC,EAMT,MAAM,IAAI/E,MAAM,0CALhB,GAAIvF,KAAK2J,KAAO9B,EAAMG,WACpB,OAAOkC,EAAOrC,EAAMG,gBAU9B/B,OAAQ,SAASnE,EAAMxC,GACrB,IAAK,IAAI6B,EAAInB,KAAKkI,WAAWQ,OAAS,EAAGvH,GAAK,IAAKA,EAAG,CACpD,IAAI0G,EAAQ7H,KAAKkI,WAAW/G,GAC5B,GAAI0G,EAAMC,QAAU9H,KAAK2J,MACrBjG,EAAO4C,KAAKuB,EAAO,eACnB7H,KAAK2J,KAAO9B,EAAMG,WAAY,CAChC,IAAIuC,EAAe1C,EACnB,OAIA0C,IACU,UAATzI,GACS,aAATA,IACDyI,EAAazC,QAAUxI,GACvBA,GAAOiL,EAAavC,aAGtBuC,EAAe,MAGjB,IAAIrE,EAASqE,EAAeA,EAAalC,WAAa,GAItD,OAHAnC,EAAOpE,KAAOA,EACdoE,EAAO5G,IAAMA,EAETiL,GACFvK,KAAKqF,OAAS,OACdrF,KAAKyH,KAAO8C,EAAavC,WAClBnC,GAGF7F,KAAKwK,SAAStE,IAGvBsE,SAAU,SAAStE,EAAQ+B,GACzB,GAAoB,UAAhB/B,EAAOpE,KACT,MAAMoE,EAAO5G,IAcf,MAXoB,UAAhB4G,EAAOpE,MACS,aAAhBoE,EAAOpE,KACT9B,KAAKyH,KAAOvB,EAAO5G,IACM,WAAhB4G,EAAOpE,MAChB9B,KAAKgK,KAAOhK,KAAKV,IAAM4G,EAAO5G,IAC9BU,KAAKqF,OAAS,SACdrF,KAAKyH,KAAO,OACa,WAAhBvB,EAAOpE,MAAqBmG,IACrCjI,KAAKyH,KAAOQ,GAGPpC,GAGT4E,OAAQ,SAASzC,GACf,IAAK,IAAI7G,EAAInB,KAAKkI,WAAWQ,OAAS,EAAGvH,GAAK,IAAKA,EAAG,CACpD,IAAI0G,EAAQ7H,KAAKkI,WAAW/G,GAC5B,GAAI0G,EAAMG,aAAeA,EAGvB,OAFAhI,KAAKwK,SAAS3C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPhC,IAKb,MAAS,SAASiC,GAChB,IAAK,IAAI3G,EAAInB,KAAKkI,WAAWQ,OAAS,EAAGvH,GAAK,IAAKA,EAAG,CACpD,IAAI0G,EAAQ7H,KAAKkI,WAAW/G,GAC5B,GAAI0G,EAAMC,SAAWA,EAAQ,CAC3B,IAAI5B,EAAS2B,EAAMQ,WACnB,GAAoB,UAAhBnC,EAAOpE,KAAkB,CAC3B,IAAI4I,EAASxE,EAAO5G,IACpB8I,EAAcP,GAEhB,OAAO6C,GAMX,MAAM,IAAInF,MAAM,0BAGlBoF,cAAe,SAASpC,EAAUf,EAAYE,GAa5C,OAZA1H,KAAK0F,SAAW,CACd1C,SAAU6D,EAAO0B,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhB1H,KAAKqF,SAGPrF,KAAKV,IAAMe,GAGNwF,IAQJvC,EA7sBM,CAotBgBD,EAAOC,SAGtC,IACEsH,mBAAqBrH,EACrB,MAAOsH,GAUPC,SAAS,IAAK,yBAAdA,CAAwCvH","file":"static/js/0.2ffedd99.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = ({ className }) => {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const getData = async () => {\r\n        const res = await fetch('https://randomuser.me/api?results=50');\r\n        const { results } = await res.json();\r\n        setUsers(results.map(({\r\n            picture: { large },\r\n            name: { first, last },\r\n            location: { city, country }\r\n        }, i) => {\r\n            return { large, first, last, city, country, hide: false }\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"container\">\r\n                <header className=\"header\">\r\n                    <h4 className=\"title\">Live User Filter</h4>\r\n                    <small className=\"subtitle\">Search by name and/or location</small>\r\n                    <input type=\"text\" placeholder=\"Search\" onChange={(e) => {\r\n                        let value = e.target.value.toLowerCase();\r\n                        let item = [...users];\r\n                        item.forEach(({ large, first, last, city, country }, i) => {\r\n                            if (!(large + \" \" + first + \" \" + last + \" \" + city + \" \" + country).toLowerCase().includes(value)) {\r\n                                item[i].hide = true;\r\n                            } else {\r\n                                item[i].hide = false;\r\n                            }\r\n                        });\r\n                        setUsers(item);\r\n                    }} />\r\n                </header>\r\n\r\n                <ul className=\"user-list\">\r\n                    {\r\n                        users.map(({ hide, large, first, last, city, country }, i) => {\r\n                            return <li key={i} className={hide ? \"hide\" : \"\"}>\r\n                                <img src={large} alt={first} />\r\n                                <div className=\"user-info\">\r\n                                    <h4>{`${first} ${last}`}</h4>\r\n                                    <p>{`${city}, ${country}`}</p>\r\n                                </div>\r\n                            </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LiveUserFilter = styled(Container)`\r\n    & {\r\n        background-color: #f8f9fd;\r\n        font-family: 'Roboto', sans-serif;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: calc(100vh - 80px);\r\n        position: relative;\r\n        top: 80px;\r\n        overflow: hidden;\r\n        margin: 0;\r\n    }\r\n    \r\n    .container {\r\n        border-radius: 5px;\r\n        box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\r\n        overflow: hidden;\r\n        width: 300px;\r\n    }\r\n    \r\n    .title {\r\n        margin: 0;\r\n    }\r\n    \r\n    .subtitle {\r\n        display: inline-block;\r\n        margin: 5px 0 20px;\r\n        opacity: 0.8;\r\n    }\r\n    \r\n    .header {\r\n        background-color: #3e57db;\r\n        color: #fff;\r\n        padding: 30px 20px;\r\n    }\r\n    \r\n    .header input {\r\n        background-color: rgba(0, 0, 0, 0.3);\r\n        border: 0;\r\n        border-radius: 50px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        padding: 10px 15px;\r\n        width: 100%;\r\n    }\r\n    \r\n    .header input:focus {\r\n        outline: none;\r\n    }\r\n    \r\n    .user-list {\r\n        background-color: #fff;\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        max-height: 400px;\r\n        overflow-y: auto;\r\n    }\r\n    \r\n    .user-list li {\r\n        display: flex;\r\n        padding: 20px;\r\n    }\r\n    \r\n    .user-list img {\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n        height: 50px;\r\n        width: 50px;\r\n    }\r\n    \r\n    .user-list .user-info {\r\n        margin-left: 10px;\r\n    }\r\n    \r\n    .user-list .user-info h4 {\r\n        margin: 0 0 10px;\r\n    }\r\n    \r\n    .user-list .user-info p {\r\n        font-size: 12px;\r\n    }\r\n    \r\n    .user-list li:not(:last-of-type) {\r\n        border-bottom: 1px solid #eee;\r\n    }\r\n    \r\n    .user-list li.hide {\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport default LiveUserFilter\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}